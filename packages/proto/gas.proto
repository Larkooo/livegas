syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.gas";
option java_outer_classname = "GasProto";

package gas;

enum Network {
  ETH_MAINNET = 0;
}

service Gas {
  // Subscribes to receive updates for upcoming blocks of a specified blockchain.
  rpc Subscribe (SubscriptionRequest) returns (stream BlockUpdate) {}

  // Retrieves gas fee information for a specified span of past blocks.
  rpc Blocks (BlockRangeRequest) returns (BlockRangeReply) {}
}

// The subscription request message
message SubscriptionRequest {
  // required
  Network network = 1; // The network for which to subscribe to block updates.  
}

// The message containing update information for each new block.
message BlockUpdate {
  Network network = 1; // The network for which the block update is being sent.
  uint64 blockNumber = 2; // The block number.
  string blockHash = 3;  // Hash of the new block.
  uint64 timestamp = 4; // The timestamp of the new block.
  double gasFee = 5;     // Gas fee for transactions in the new block.
}

// The request message for retrieving gas fees for a specified range of blocks.
message BlockRangeRequest {
  Network network = 1; // The network for which to retrieve gas fee information.
  uint64 startBlock = 2; // The starting block number.
  uint64 endBlock = 3;   // The ending block number.
}

// The response message containing a list of block updates within the requested range.
message BlockRangeReply {
  repeated BlockUpdate blockUpdates = 1; // A list of block updates for the specified range.
}
